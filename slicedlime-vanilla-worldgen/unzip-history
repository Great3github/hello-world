#!/bin/bash

cd ./examples/

# -f checks if file exists
if [ -f ./last-commit.txt ]; then
  last_commit="$(cat ./last-commit.txt).."
fi

git pull

# %H is placeholder for commit hash
# %s: subject
# %ai: author date, ISO 8601-like format
# There's a distinction between "author" and "committer" that I believe is not relevant for this repository.
# --follow only lists the commits for a file
# --reverse reverses the order of the commits (so oldest first)
git log --format="%H %s (%ai)" --follow vanilla_worldgen.zip --reverse $last_commit > ../commits.txt

# Get hash of latest commit
# https://stackoverflow.com/a/949391
git rev-parse HEAD > last-commit.txt

# https://stackoverflow.com/a/1521498
while read line; do
  # Split by first space, storing the left and right halves in hash and message respectively.
  # https://unix.stackexchange.com/a/53315
  IFS=' ' read -r hash message <<< "$line"
  
  # Get file from specific commit (hash) and store it somewhere
  # https://stackoverflow.com/a/888623
  git cat-file blob $hash:vanilla_worldgen.zip > ../vanilla_worldgen.zip

  cd ../vanilla_worldgen/

  # Remove all files in repo
  # https://stackoverflow.com/a/51093657
  # git rm normally complains if there's nothing to remove. --ignore-unmatch shuts that up.
  git rm -r . --quiet --ignore-unmatch

  # Extracts the given zip into this (vanilla_worldgen) directory
  # -qq makes it extra quiet
  unzip -qq ../vanilla_worldgen.zip -d .

  # There isn't a --quiet option for git add :(
  # https://stackoverflow.com/questions/26277968/git-add-quiet-quiet-option-not-available#comment41228251_26277968
  # https://stackoverflow.com/a/33192221
  git add . &> /dev/null
  git commit -m "$message" --quiet

  # Unsure if this is necessary or it'll reset when at the end of a loop
  cd ../examples/

  echo "$message"
done < ../commits.txt
