(define increment
  (let ((counter 0))
    (lambda ()
      (set! counter (+ counter 1))
      counter)))
(increment)
(increment)
(increment)
(increment)

(define (make-sheep name colour)
  (define (greet)
    (display "\nhello my name is ")
    (display name))
  (define (describe)
    (display "\nsheep is ")
    (display colour))
  (define (dispatch msg)
    (cond ((eq? msg 'greet) (greet))
          ((eq? msg 'describe) (describe))
          (else (display "\nstop testing me"))))
  dispatch)

(define billy (make-sheep 'billy 'grey))
(billy 'greet)
(billy 'describe)
(billy 'yeet)